runtime! debian.vim

" 使用指定语法高亮配色方案替换默认方案
syntax enable
if has("syntax")
  syntax on
endif

" 设置编码以支持中文
set fileencodings=gb2312,gb18030,utf-8,ucs-bom,gb18030,gbk,cp936
set termencoding=utf-8
set encoding=utf-8

" 定义快捷键的前缀，即<leader>
let mapleader="`"

"  定义快捷键的前缀，即<Leader>
let mapleader=";"

" 将选中的文本块复制到系统剪贴板
vnoremap <Leader>y "+y
" 将系统剪贴板内容粘贴至 vim
vnoremap <Leader>p "+p

" 将 pathogen 自身也置于独立目录中，需指定其路径
runtime bundle/pathogen/autoload/pathogen.vim
" 如果是 windows
" source ~/vimfiles/bundle/vim_pathogen/autoload/pathogen.vim

" 运行 pathogen
execute pathogen#infect()

" 把连续数量的空格视为一个制表符
set softtabstop=4

" 自适应不同语言的智能缩进
filetype indent on

" 设置格式化时制表符占用空格数
set shiftwidth=4

" 将制表符扩展为空格
set expandtab

" 显示输入的命令
set showcmd

" 启动的时候不显示那个援助儿童的信息
set shortmess=atI


" ===== NERDTree 相关配置 =====
" 使用 NERDTree 插件查看工程文件，快捷键为 <Leader>af
nmap <Leader>af :NERDTreeToggle<CR>
" 设置 NERDTree 子窗口宽度
let NERDTreeWinSize=32
" 设置 NERDTree 子窗口位置
let NERDTreeWinPos="left"
" 显示隐藏文件
" let NERDTreeShowHidden=1
" NERDTree 子窗口不显示冗余帮助信息
let NERDTreeMinimalUI=1
" 删除文件时自动删除文件对应 buffer
let NERDTreeAutoDeleteBuffer=1


" ===== Indent Guide 相关配置 =====
" 随 vim 自启动
let g:indent_guides_enable_on_vim_startup=1
" 从第二层开始可视化显示缩进
let g:indent_guides_start_level=2
" 色块宽度
let g:indent_guides_guide_size=1
" 快捷键 i 开/关缩进可视化
:nmap <silent> <Leader>i <Plug>IndentGuidesToggle


" 基于缩进或语法进行代码折叠
"set foldmethod=indent
set foldmethod=syntax

" 启动 vim 时关闭折叠代码
set nofoldenable

" C/C++ 风格缩进
set cindent

" 自动对齐
set autoindent

" 设置状态栏主题风格
let g:Powerline_colorscheme='solarized256'

" 禁止显示滚动条
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R

" 禁止显示菜单和工具条
set guioptions-=m
set guioptions-=T

" 设置编辑时制表符占用空格数
set tabstop=4

" 总是显示状态栏
set laststatus=2

" 显示光标当前位置
set ruler

" 高亮显示当前行/列
set cursorline
"set cursorcolumn

" 设置退格键可用
set backspace=2

" 禁止换行
set nowrap

" 设置匹配模式，类似当输入一个左括号时会匹配相应的右括号
set showmatch

" 去除 vim 的 GUI 版本中的 toolbar
set guioptions-=T

" 设置 gvim 显示字体
set guifont=YaHei\ Consolas\ Hybrid\ 11.5

" 显示行号
set nu

" 开启文件类型侦测
filetype on     

" 根据侦测到的不同类型加载对应的插件
filetype plugin on  

" 定义快捷键到行首和行尾
nmap lb 0
nmap le $

" 开启实时搜索功能
set incsearch

" 高亮显示搜索结果
set hlsearch

" 搜索时大小写敏感
set ignorecase

" 关闭兼容模式
set nocompatible

" vim 自身命令行模式智能补全
set wildmenu

" 设置背景颜色和主题
set background=dark
colorscheme molokai

" 代码折叠
set foldmethod=indent
set foldlevel=99
" 使用空格代替 za 实现代码折叠
nnoremap <space> za

au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
   \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix |

au BufNewFile,BufRead *.js,*.html,*.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |

" 标记空格
highlight BadWhitespace ctermbg=red guibg=red
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

let python_highlight_all=1
